/*
 * NAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.trulioo.normalizedapi.api;

import com.trulioo.normalizedapi.ApiException;
import com.trulioo.normalizedapi.model.BusinessRegistrationNumber;
import com.trulioo.normalizedapi.model.BusinessSearchRequest;
import com.trulioo.normalizedapi.model.BusinessSearchResponse;
import com.trulioo.normalizedapi.model.BusinessVerifyRequest;
import com.trulioo.normalizedapi.model.CountrySubdivision;
import com.trulioo.normalizedapi.model.ProblemDetails;
import com.trulioo.normalizedapi.model.VerifyResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BusinessApi
 */
@Disabled
public class BusinessApiTest {

    private final BusinessApi api = new BusinessApi();

    /**
     * Search
     *
     * Calling this method will perform a business search.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessSearchTest() throws ApiException {
        BusinessSearchRequest businessSearchRequest = null;
        BusinessSearchResponse response = api.businessSearch(businessSearchRequest);
        // TODO: test validations
    }

    /**
     * Verify
     *
     * Calling this method will perform a verification. If your account includes address cleansing set the CleansedAddress flag to get additional address information in the result.  You can query configuration to get what fields are available to you in each each country. It is also possible to get sample requests from the customer portal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessVerifyTest() throws ApiException {
        BusinessVerifyRequest businessVerifyRequest = null;
        VerifyResult response = api.businessVerify(businessVerifyRequest);
        // TODO: test validations
    }

    /**
     * GetBusinessRegistrationNumbers
     *
     * Gets the currently configured business registration numbers for optionally supplied country and jurisdiction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBusinessRegistrationNumbersTest() throws ApiException {
        List<BusinessRegistrationNumber> response = api.getBusinessRegistrationNumbers();
        // TODO: test validations
    }

    /**
     * getBusinessRegistrationNumbersWithParameters
     *
     * Gets the currently configured business registration numbers for a country and optionally supplied jurisdiction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBusinessRegistrationNumbersWithParametersTest() throws ApiException {
        String countryCode = null;
        String jurisdictionCode = null;
        List<BusinessRegistrationNumber> response = api.getBusinessRegistrationNumbersWithParameters(countryCode, jurisdictionCode);
        // TODO: test validations
    }

    /**
     * GetCountryJOI
     *
     * Gets all jurisdictions of incorporation for all countries.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCountryJOITest() throws ApiException {
        List<CountrySubdivision> response = api.getCountryJOI();
        // TODO: test validations
    }

    /**
     * getCountryJOIWithCountryCode
     *
     * Gets the jurisdictions of incorporation for a country.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCountryJOIWithCountryCodeTest() throws ApiException {
        String countryCode = null;
        List<CountrySubdivision> response = api.getCountryJOIWithCountryCode(countryCode);
        // TODO: test validations
    }

}
